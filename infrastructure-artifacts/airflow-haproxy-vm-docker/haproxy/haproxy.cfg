# Some sane default arguments
global
    log 127.0.0.1 local0 debug
    maxconn 4096
    user haproxy
    group haproxy
    log stdout format raw local0

defaults
    option forwardfor
    log global
    option http-server-close
    timeout connect 5000
    timeout client 50000
    timeout server 50000
    option httplog


# The frontend configuration (i.e. the thing that listens for incoming HTTP/HTTPS connections)
frontend public
    # The frontend listens for HTTP mode (HAProxy also supports TCP proxy)
    mode http
    # Bind to port 80 (HTTP) and port 443 (HTTPS) and set the certificate location and some TLS settings for HTTPS
    bind *:80
    bind *:443 ssl crt /usr/local/etc/haproxy/tls.pem ssl-min-ver TLSv1.2 no-tls-tickets curves X448:P-521:P-384 ciphersuites TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256 ciphers ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA256
    # Redirect all HTTP requests to HTTPS using the 301 status code (i.e. permanent redirection)
    redirect scheme https code 301 if !{ ssl_fc }
    # Use airflow-webserver as default backend (it is also possible to select the backend dynamically, e.g. based upon the domain or URL)
    default_backend airflow-webserver


# The airflow-webserver backend
backend airflow-webserver
    # The backend operates in HTTP mode (HAProxy also supports TCP proxy)
    mode http
    # The backend server has the address `airflow-webserver:8080` (the container is named "airflow-webserver" and listens on port 8080)
    server airflow-webserver airflow-webserver:8080
    # Modify the HTTP header for proxy aware backends
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
